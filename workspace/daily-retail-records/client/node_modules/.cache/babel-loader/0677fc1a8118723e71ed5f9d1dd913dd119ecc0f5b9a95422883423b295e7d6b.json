{"ast":null,"code":"var _jsxFileName = \"B:\\\\gpt-pilot\\\\workspace\\\\daily-retail-records\\\\client\\\\src\\\\components\\\\RetailTracking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Link } from 'react-router-dom';\nimport './RetailTracking.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RetailTracking = () => {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [validationErrors, setValidationErrors] = useState({});\n  useEffect(() => {\n    fetchSales().catch(error => console.error(\"Fetching sales failed\", error));\n    const fetchCompaniesAndProducts = async () => {\n      try {\n        const companiesResponse = await axios.get('/api/companies');\n        setCompanies(companiesResponse.data.map(company => ({\n          label: company.name,\n          value: company._id\n        })));\n        const productsResponse = await axios.get('/api/products');\n        setProducts(productsResponse.data.map(product => ({\n          label: product.name,\n          value: product._id,\n          price: product.price\n        })));\n      } catch (error) {\n        console.error(\"Error fetching companies or products:\", error.response ? error.response.data : error.message);\n      }\n    };\n    fetchCompaniesAndProducts();\n  }, []);\n  const fetchSales = async () => {\n    try {\n      const response = await axios.get('/api/sales');\n      setSales(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch sales:\", error.response ? error.response.data : error.message);\n    }\n  };\n  const deleteSale = async id => {\n    try {\n      await axios.delete(`/api/sales/${id}`);\n      fetchSales(); // Refresh the list after deleting\n    } catch (error) {\n      console.error(\"Failed to delete sale:\", error.response ? error.response.data : error.message);\n    }\n  };\n  const handleAddProduct = selectedOption => {\n    const product = products.find(product => product.value === selectedOption.value);\n    const newProduct = {\n      ...product,\n      quantity: 1,\n      price: '',\n      isDifferentPrice: false,\n      priceColor: ''\n    };\n    setSelectedProducts([...selectedProducts, newProduct]);\n  };\n  const handleRemoveProduct = index => {\n    const newSelectedProducts = [...selectedProducts];\n    newSelectedProducts.splice(index, 1);\n    setSelectedProducts(newSelectedProducts);\n  };\n  const updateProductDetails = (index, field, value) => {\n    const updatedProducts = [...selectedProducts];\n    updatedProducts[index][field] = value;\n    setSelectedProducts(updatedProducts);\n  };\n  const validateForm = () => {\n    let errors = {};\n    selectedProducts.forEach((product, index) => {\n      if (product.quantity <= 0 || !Number.isInteger(product.quantity)) {\n        errors[`quantity-${index}`] = 'Quantity must be a positive integer.';\n      }\n      if (product.price && (isNaN(product.price) || product.price <= 0)) {\n        errors[`price-${index}`] = 'Price must be a positive number.';\n      }\n    });\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return; // Stop the form submission if validation fails\n    }\n    try {\n      const saleData = {\n        companyName: selectedCompany.value,\n        itemsSold: selectedProducts.map(({\n          label,\n          value,\n          quantity,\n          price,\n          isDifferentPrice,\n          priceColor\n        }) => ({\n          itemName: label,\n          productId: value,\n          // Changed from value to productId to match the backend model\n          quantity,\n          price: price || undefined,\n          isDifferentPrice,\n          priceColor\n        }))\n      };\n      console.log(saleData);\n      await axios.post('/api/sales', saleData);\n      alert('Sale record added successfully');\n      setSelectedProducts([]);\n      setSelectedCompany(null); // Reset selected company after successful submission\n      setValidationErrors({}); // Clear validation errors\n      fetchSales(); // Refresh the sales list\n    } catch (error) {\n      console.error(\"Failed to submit sale:\", error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"retail-tracking\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Retail Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        value: selectedCompany,\n        onChange: setSelectedCompany,\n        options: companies,\n        placeholder: \"Select a Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), selectedCompany && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          onChange: handleAddProduct,\n          options: products,\n          placeholder: \"Select Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: product.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: product.quantity,\n            onChange: e => updateProductDetails(index, 'quantity', parseInt(e.target.value)),\n            required: true,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: product.price,\n            onChange: e => updateProductDetails(index, 'price', e.target.value),\n            placeholder: `Price (stock: ${product.price})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: product.isDifferentPrice,\n              onChange: e => updateProductDetails(index, 'isDifferentPrice', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), \" Different price?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), product.isDifferentPrice && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `priceColor-${index}`,\n              value: \"white\",\n              checked: product.priceColor === 'white',\n              onChange: e => updateProductDetails(index, 'priceColor', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), \" White\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `priceColor-${index}`,\n              value: \"black\",\n              checked: product.priceColor === 'black',\n              onChange: e => updateProductDetails(index, 'priceColor', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this), \" Black\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveProduct(index),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), validationErrors[`quantity-${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: validationErrors[`quantity-${index}`]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 59\n          }, this), validationErrors[`price-${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: validationErrors[`price-${index}`]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 56\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-list\",\n      children: sales.map((sale, saleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sale-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: sale.companyName.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Items Sold: \", sale.itemsSold.length > 0 ? sale.itemsSold.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${item.itemName} - Quantity: ${item.quantity}, Price: ${item.price || 'N/A'}`\n          }, `${sale._id}-${itemIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 83\n          }, this)).reduce((acc, curr, index, array) => index < array.length - 1 ? [...acc, curr, ', '] : [...acc, curr], []) : \"No items sold\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteSale(sale._id),\n          children: \"Delete Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit-sale/${sale._id}`,\n          children: \"Edit Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this)]\n      }, sale._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(RetailTracking, \"AkgYKc0G9MekhMjsD68529q4LSs=\");\n_c = RetailTracking;\nexport default RetailTracking;\nvar _c;\n$RefreshReg$(_c, \"RetailTracking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","RetailTracking","_s","sales","setSales","companies","setCompanies","selectedCompany","setSelectedCompany","products","setProducts","selectedProducts","setSelectedProducts","validationErrors","setValidationErrors","fetchSales","catch","error","console","fetchCompaniesAndProducts","companiesResponse","get","data","map","company","label","name","value","_id","productsResponse","product","price","response","message","deleteSale","id","delete","handleAddProduct","selectedOption","find","newProduct","quantity","isDifferentPrice","priceColor","handleRemoveProduct","index","newSelectedProducts","splice","updateProductDetails","field","updatedProducts","validateForm","errors","forEach","Number","isInteger","isNaN","Object","keys","length","handleSubmit","e","preventDefault","saleData","companyName","itemsSold","itemName","productId","undefined","log","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","options","placeholder","isMulti","type","parseInt","target","required","min","checked","onClick","style","color","sale","saleIndex","item","itemIndex","reduce","acc","curr","array","to","_c","$RefreshReg$"],"sources":["B:/gpt-pilot/workspace/daily-retail-records/client/src/components/RetailTracking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport { Link } from 'react-router-dom';\r\nimport './RetailTracking.css';\r\n\r\nconst RetailTracking = () => {\r\n  const [sales, setSales] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchSales().catch(error => console.error(\"Fetching sales failed\", error));\r\n    const fetchCompaniesAndProducts = async () => {\r\n      try {\r\n        const companiesResponse = await axios.get('/api/companies');\r\n        setCompanies(companiesResponse.data.map(company => ({ label: company.name, value: company._id })));\r\n        const productsResponse = await axios.get('/api/products');\r\n        setProducts(productsResponse.data.map(product => ({ label: product.name, value: product._id, price: product.price })));\r\n      } catch (error) {\r\n        console.error(\"Error fetching companies or products:\", error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n    fetchCompaniesAndProducts();\r\n  }, []);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const response = await axios.get('/api/sales');\r\n      setSales(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch sales:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const deleteSale = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/sales/${id}`);\r\n      fetchSales(); // Refresh the list after deleting\r\n    } catch (error) {\r\n      console.error(\"Failed to delete sale:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = (selectedOption) => {\r\n    const product = products.find(product => product.value === selectedOption.value);\r\n    const newProduct = { ...product, quantity: 1, price: '', isDifferentPrice: false, priceColor: '' };\r\n    setSelectedProducts([...selectedProducts, newProduct]);\r\n  };\r\n\r\n  const handleRemoveProduct = (index) => {\r\n    const newSelectedProducts = [...selectedProducts];\r\n    newSelectedProducts.splice(index, 1);\r\n    setSelectedProducts(newSelectedProducts);\r\n  };\r\n\r\n  const updateProductDetails = (index, field, value) => {\r\n    const updatedProducts = [...selectedProducts];\r\n    updatedProducts[index][field] = value;\r\n    setSelectedProducts(updatedProducts);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    selectedProducts.forEach((product, index) => {\r\n      if (product.quantity <= 0 || !Number.isInteger(product.quantity)) {\r\n        errors[`quantity-${index}`] = 'Quantity must be a positive integer.';\r\n      }\r\n      if (product.price && (isNaN(product.price) || product.price <= 0)) {\r\n        errors[`price-${index}`] = 'Price must be a positive number.';\r\n      }\r\n    });\r\n    setValidationErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      return; // Stop the form submission if validation fails\r\n    }\r\n    try {\r\n      const saleData = {\r\n        companyName: selectedCompany.value,\r\n        itemsSold: selectedProducts.map(({ label, value, quantity, price, isDifferentPrice, priceColor }) => ({\r\n          itemName: label,\r\n          productId: value, // Changed from value to productId to match the backend model\r\n          quantity,\r\n          price: price || undefined,\r\n          isDifferentPrice,\r\n          priceColor\r\n        }))\r\n      };\r\n      console.log(saleData)\r\n      await axios.post('/api/sales', saleData);\r\n      alert('Sale record added successfully');\r\n      setSelectedProducts([]);\r\n      setSelectedCompany(null); // Reset selected company after successful submission\r\n      setValidationErrors({}); // Clear validation errors\r\n      fetchSales(); // Refresh the sales list\r\n    } catch (error) {\r\n      console.error(\"Failed to submit sale:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"retail-tracking\">\r\n      <h2>Retail Tracking</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <Select\r\n          value={selectedCompany}\r\n          onChange={setSelectedCompany}\r\n          options={companies}\r\n          placeholder=\"Select a Company\"\r\n        />\r\n        {selectedCompany && (\r\n          <>\r\n            <Select\r\n              isMulti\r\n              onChange={handleAddProduct}\r\n              options={products}\r\n              placeholder=\"Select Products\"\r\n            />\r\n            {selectedProducts.map((product, index) => (\r\n\r\n              <div key={index} className=\"product-item\">\r\n                <span>{product.label}</span>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.quantity}\r\n                  onChange={(e) => updateProductDetails(index, 'quantity', parseInt(e.target.value))}\r\n                  required\r\n                  min=\"1\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={product.price}\r\n                  onChange={(e) => updateProductDetails(index, 'price', e.target.value)}\r\n                  placeholder={`Price (stock: ${product.price})`}\r\n                />\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={product.isDifferentPrice}\r\n                    onChange={(e) => updateProductDetails(index, 'isDifferentPrice', e.target.checked)}\r\n                  /> Different price?\r\n                </div>\r\n                {product.isDifferentPrice && (\r\n                  <div>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`priceColor-${index}`}\r\n                      value=\"white\"\r\n                      checked={product.priceColor === 'white'}\r\n                      onChange={(e) => updateProductDetails(index, 'priceColor', e.target.value)}\r\n                    /> White\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`priceColor-${index}`}\r\n                      value=\"black\"\r\n                      checked={product.priceColor === 'black'}\r\n                      onChange={(e) => updateProductDetails(index, 'priceColor', e.target.value)}\r\n                    /> Black\r\n                  </div>\r\n                )}\r\n                <button type=\"button\" onClick={() => handleRemoveProduct(index)}>X</button>\r\n                {validationErrors[`quantity-${index}`] && <div style={{ color: 'red' }}>{validationErrors[`quantity-${index}`]}</div>}\r\n                {validationErrors[`price-${index}`] && <div style={{ color: 'red' }}>{validationErrors[`price-${index}`]}</div>}\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\">Submit Sale</button>\r\n          </>\r\n        )}\r\n      </form>\r\n      <div className=\"sales-list\">\r\n        {\r\n          sales.map((sale, saleIndex) => (\r\n            <div key={sale._id} className=\"sale-card\">\r\n              <h3>{sale.companyName.name}</h3>\r\n              <p>Items Sold: {\r\n              sale.itemsSold.length > 0 ? sale.itemsSold.map((item, itemIndex) => <span key={`${sale._id}-${itemIndex}`}>{`${item.itemName} - Quantity: ${item.quantity}, Price: ${item.price || 'N/A'}`}</span>).reduce((acc, curr, index, array) => index < array.length - 1 ? [...acc, curr, ', '] : [...acc, curr], []) : \"No items sold\"\r\n              }</p>\r\n              <button onClick={() => deleteSale(sale._id)}>Delete Sale</button>\r\n              <Link to={`/edit-sale/${sale._id}`}>Edit Sale</Link>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetailTracking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}